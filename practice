//push a key into HashMap and maintain counter for the same key in the Map.
HashMap<K,V> map = new HashMap<>();
for(Integer node: edgeNodesList){
  nodeEdgeCounter.put(node, map.getOrDefault(node, 0)+1);
}

//Get EntrySet and access keys and values directly form the Map.
for(Map.Entry<Integer, Integer> mapEntry: map.entrySet()){
  if(mapEntry.getValue() %2 != 0){
    return false; 
  }   
}

//convert Array into a fixed size List.
List<Integer> arr = Arrays.asList(new Integer[10]);

//Create fixed size ArrayList and Initialise with default. size = n, Value= false.
ArrayList<Boolean> myList=new ArrayList<Boolean>(Collections.nCopies(n, false));
//replace existing elements in List with default value.
Collections.fill(myList, Boolean.False);

//map with Comprator - asc + dec

//EntrySet with compartor - asc + dec

//priorityQueue code

//create a List using collections

//Convert list to Array and Array to List

//initialize arrays.
